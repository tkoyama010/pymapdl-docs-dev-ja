
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/gallery_examples/02-tips-n-tricks/04-rotational-displacement.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_gallery_examples_02-tips-n-tricks_04-rotational-displacement.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_gallery_examples_02-tips-n-tricks_04-rotational-displacement.py:


.. _ref_rotational_displacement_example:

Generating and Extracting Rotational Displacement
-------------------------------------------------

In this example we show how to work with shells and rotation displacements.

Not all element types have rotational degrees of freedom, but generally,
"shell" ones do. In this example we create a square shell with thickness
of 0.1 and bend it, creating rotational displacement.

We subsequently plot the cumulative principal stresses and use
:class:`ansys.mapdl.core.inline_functions.Query` to
extract the exact values of rotational displacement at the four corners
of our square.

.. GENERATED FROM PYTHON SOURCE LINES 41-48

.. code-block:: Python


    # start MAPDL and enter the pre-processing routine
    from ansys.mapdl.core import launch_mapdl

    mapdl = launch_mapdl()
    mapdl.prep7()


.. GENERATED FROM PYTHON SOURCE LINES 49-62

Mesh Setup
~~~~~~~~~~
In this example we create a simple 2D square, 1 x 1 in dimension, and give it
the `'SHELL181'` element type because this type has rotational degrees of
freedom. Following this we:

- Give the material an elastic modulus of 2e5 (EX)
- Give the material a major poissons ratio of 0.3 (PRXY)
- Set the section type to 'SHELL'
- Set the thickness to 0.1
- Set the element size to 0.2
- Mesh the square
- Plot the mesh

.. GENERATED FROM PYTHON SOURCE LINES 62-73

.. code-block:: Python


    mapdl.et(1, "SHELL181")
    mapdl.mp("EX", 1, 2e5)
    mapdl.mp("PRXY", 1, 0.3)
    mapdl.rectng(0, 1, 0, 1)
    mapdl.sectype(1, "SHELL")
    mapdl.secdata(0.1)
    mapdl.esize(0.2)
    mapdl.amesh("all")
    mapdl.eplot()


.. GENERATED FROM PYTHON SOURCE LINES 74-82

Applying Boundary Conditions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Enter solution mode
- Set analysis type to `'STATIC'`
- Remove all degrees of freedom for nodes at ``x = 0``
- Apply a displacement of ``uz = -0.1`` at ``x = 1``
- Select all nodes
- Solve the model

.. GENERATED FROM PYTHON SOURCE LINES 82-92

.. code-block:: Python


    mapdl.run("/SOLU")
    mapdl.antype("STATIC")
    mapdl.nsel("s", "loc", "x", 0)
    mapdl.d("all", "all")
    mapdl.nsel("s", "loc", "x", 1)
    mapdl.d("all", "uz", -0.1)
    mapdl.allsel("all")
    mapdl.solve()


.. GENERATED FROM PYTHON SOURCE LINES 93-99

Plotting Stresses
~~~~~~~~~~~~~~~~~
- Extract the results
- Plot the cumulative (0) equivalent stress (SEQV)
  - Set the colormap to 'plasma' because it is perceptually uniform
  - Show displacement so that we can see any deformation

.. GENERATED FROM PYTHON SOURCE LINES 99-106

.. code-block:: Python


    result = mapdl.result
    result.plot_principal_nodal_stress(
        0, "SEQV", show_edges=True, cmap="plasma", show_displacement=True
    )



.. GENERATED FROM PYTHON SOURCE LINES 107-114

Extracting Rotational Displacements
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Get a :class:`ansys.mapdl.core.inline_functions.Query` instance from the
  ``queries`` property
- Locate the nodes at the four corners of the square
- Extract all 3 rotational displacement components for each one
- Print them all

.. GENERATED FROM PYTHON SOURCE LINES 114-146

.. code-block:: Python


    q = mapdl.queries

    node1 = q.node(0, 0, 0)
    node2 = q.node(0, 1, 0)
    node3 = q.node(1, 0, 0)
    node4 = q.node(1, 1, 0)

    nodes = [node1, node2, node3, node4]

    rotations = [(q.rotx(n), q.roty(n), q.rotz(n)) for n in nodes]

    message = f"""
    (0,1) B _________ C (1,1)
           |         |
           |         |
           |         |
           |_________|
    (0,0) A           D (1,0)

    N | (x_rot_disp, y_rot_disp, z_rot_disp)
    --|------------------------------------
    A | {rotations[0][0]:11.6f},{rotations[0][1]:11.6f},{rotations[0][2]:11.6f}
    B | {rotations[1][0]:11.6f},{rotations[1][1]:11.6f},{rotations[1][2]:11.6f}
    C | {rotations[2][0]:11.6f},{rotations[2][1]:11.6f},{rotations[2][2]:11.6f}
    D | {rotations[3][0]:11.6f},{rotations[3][1]:11.6f},{rotations[3][2]:11.6f}

    """

    print(message)



.. GENERATED FROM PYTHON SOURCE LINES 147-150

Stop mapdl
~~~~~~~~~~


.. GENERATED FROM PYTHON SOURCE LINES 150-151

.. code-block:: Python

    mapdl.exit()


.. _sphx_glr_download_examples_gallery_examples_02-tips-n-tricks_04-rotational-displacement.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 04-rotational-displacement.ipynb <04-rotational-displacement.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 04-rotational-displacement.py <04-rotational-displacement.py>`
