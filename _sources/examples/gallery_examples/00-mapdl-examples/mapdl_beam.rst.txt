
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/gallery_examples/00-mapdl-examples/mapdl_beam.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_gallery_examples_00-mapdl-examples_mapdl_beam.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_gallery_examples_00-mapdl-examples_mapdl_beam.py:


.. _ref_mapdl_beam:

MAPDL 2D Beam Example
---------------------

This is an example from the book *"Finite element analysis using ansys 11.0"*
by Paletikrishna Chaitanya, Sambanarajesh Kumar, and Datti Srinivas.
PHI Learning Pvt. Ltd., 1 Jan 2010.

.. GENERATED FROM PYTHON SOURCE LINES 36-37

Launch MAPDL with interactive plotting

.. GENERATED FROM PYTHON SOURCE LINES 37-41

.. code-block:: Python

    from ansys.mapdl.core import launch_mapdl

    mapdl = launch_mapdl()
    mapdl.fcomp("rst", 0)  # specify compression level

.. GENERATED FROM PYTHON SOURCE LINES 42-43

Define an I-beam

.. GENERATED FROM PYTHON SOURCE LINES 43-57

.. code-block:: Python

    mapdl.prep7()
    mapdl.et(1, "BEAM188")
    mapdl.keyopt(1, 4, 1)  # transverse shear stress output

    # material properties
    mapdl.mp("EX", 1, 2e7)  # N/cm2
    mapdl.mp("PRXY", 1, 0.27)  #  Poisson's ratio

    # beam properties in centimeters
    sec_num = 1
    mapdl.sectype(sec_num, "BEAM", "I", "ISection", 3)
    mapdl.secoffset("CENT")
    beam_info = mapdl.secdata(15, 15, 29, 2, 2, 1)  # dimensions are in centimeters


.. GENERATED FROM PYTHON SOURCE LINES 58-59

Create nodes within MAPDL

.. GENERATED FROM PYTHON SOURCE LINES 59-74

.. code-block:: Python

    mapdl.n(1, 0, 0, 0)
    mapdl.n(12, 110, 0, 0)
    mapdl.n(23, 220, 0, 0)
    mapdl.fill(1, 12, 10)
    mapdl.fill(12, 23, 10)

    # list the node coordinates
    print(mapdl.mesh.nodes)

    # list the node numbers
    print(mapdl.mesh.nnum)

    # plot the nodes using VTK
    mapdl.nplot(nnum=True, cpos="xy", show_bounds=True, point_size=10)


.. GENERATED FROM PYTHON SOURCE LINES 75-78

create elements between the nodes
we can just manually create elements since we know that the elements
are sequential

.. GENERATED FROM PYTHON SOURCE LINES 78-84

.. code-block:: Python

    for node in mapdl.mesh.nnum[:-1]:
        mapdl.e(node, node + 1)

    # print the elements from MAPDL
    print(mapdl.elist())


.. GENERATED FROM PYTHON SOURCE LINES 85-88

Access them as a list of arrays
See the documentation on ``mapdl.mesh.elem`` for interpreting the
individual elements

.. GENERATED FROM PYTHON SOURCE LINES 88-91

.. code-block:: Python

    for elem in mapdl.mesh.elem:
        print(elem)


.. GENERATED FROM PYTHON SOURCE LINES 92-93

Define the boundary conditions

.. GENERATED FROM PYTHON SOURCE LINES 93-106

.. code-block:: Python


    # Allow movement only in the X and Z direction
    for const in ["UX", "UY", "ROTX", "ROTZ"]:
        mapdl.d("all", const)

    # constrain just nodes 1 and 23 in the Z direction
    mapdl.d(1, "UZ")
    mapdl.d(23, "UZ")

    # apply a -Z force at node 12
    mapdl.f(12, "FZ", -22840)



.. GENERATED FROM PYTHON SOURCE LINES 107-108

run the static analysis

.. GENERATED FROM PYTHON SOURCE LINES 108-112

.. code-block:: Python

    mapdl.run("/solu")
    mapdl.antype("static")
    print(mapdl.solve())


.. GENERATED FROM PYTHON SOURCE LINES 113-116

Stop mapdl
~~~~~~~~~~


.. GENERATED FROM PYTHON SOURCE LINES 116-117

.. code-block:: Python

    mapdl.exit()


.. _sphx_glr_download_examples_gallery_examples_00-mapdl-examples_mapdl_beam.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: mapdl_beam.ipynb <mapdl_beam.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: mapdl_beam.py <mapdl_beam.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: mapdl_beam.zip <mapdl_beam.zip>`
